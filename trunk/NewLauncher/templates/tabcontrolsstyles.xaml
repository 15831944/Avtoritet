<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <SolidColorBrush x:Key="TabContolBorderBrush" Color="#ABB4B9" />
  <SolidColorBrush x:Key="TabControlBackground" Color="#FEFEFF" />
  <SolidColorBrush x:Key="TabItemBackgroundBrushInactive" Color="#D4DDE4" />
  <ControlTemplate x:Key="TabItemTemplate" TargetType="{x:Type TabItem}">
    <Border Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Padding="10,5">
      <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" />
    </Border>
    <ControlTemplate.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
          <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
        </MultiDataTrigger.Conditions>
        <Setter Property="FrameworkElement.Margin" Value="-1,0,-1,0" />
        <Setter Property="Control.BorderThickness" Value="1,1,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="FrameworkElement.Margin" Value="-1,-2,0,-1" />
        <Setter Property="Control.BorderThickness" Value="1,1,1,0" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
          <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="RightFlag" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Control.BorderThickness" Value="0,1,1,1" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="RightFlag" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="FrameworkElement.Margin" Value="0,-2,-2,-2" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
    <Setter Property="UIElement.ClipToBounds" Value="False" />
    <Setter Property="Control.Background" Value="{StaticResource TabItemBackgroundBrushInactive}" />
    <Setter Property="Control.BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
    <Setter Property="Control.BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
    <Setter Property="Control.Template" Value="{StaticResource TabItemTemplate}" />
    <Style.Triggers>
      <Trigger Property="TabItem.IsSelected" Value="True">
        <Setter Property="Control.Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="{x:Type RepeatButton}">
    <Border Name="Border" Background="{TemplateBinding Control.Background}">
      <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
    </Border>
  </ControlTemplate>
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <ControlTemplate x:Key="ScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <RepeatButton Grid.Column="0" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Template="{StaticResource RepeatButtonTemplate}" Background="#00FFFFFF" Padding="4,0" ClickMode="Hover" Command="{x:Static ScrollBar.LineLeftCommand}">
        <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF000000" StrokeThickness="2" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="False" RenderTransformOrigin="0.5,0.5">
          <Path.RenderTransform>
            <TransformGroup>
              <RotateTransform Angle="90" />
            </TransformGroup>
          </Path.RenderTransform>
        </Path>
      </RepeatButton>
      <RepeatButton Grid.Column="2" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Template="{StaticResource RepeatButtonTemplate}" Background="#00FFFFFF" Padding="2,0" Command="{x:Static ScrollBar.LineRightCommand}" ClickMode="Hover">
        <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF000000" StrokeThickness="2" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="False" RenderTransformOrigin="0.5,0.5">
          <Path.RenderTransform>
            <TransformGroup>
              <RotateTransform Angle="-90" />
            </TransformGroup>
          </Path.RenderTransform>
        </Path>
      </RepeatButton>
      <ScrollContentPresenter Grid.Column="1" Panel.ZIndex="101" Margin="{TemplateBinding Control.Padding}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True" />
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="TabControlTemplate" TargetType="{x:Type TabControl}">
    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local" Margin="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Name="ColumnDefinition0" />
        <ColumnDefinition Name="ColumnDefinition1" Width="0" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Name="RowDefinition0" Height="Auto" />
        <RowDefinition Name="RowDefinition1" Height="*" />
      </Grid.RowDefinitions>
      <ScrollViewer Template="{StaticResource ScrollViewerTemplate}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" Panel.ZIndex="100" SnapsToDevicePixels="True" UseLayoutRounding="True" Padding="0,0,0,-1">
        <StackPanel Name="HeaderPanel" SnapsToDevicePixels="True" UseLayoutRounding="True" Orientation="Horizontal" Background="#00FFFFFF" Grid.Column="0" Grid.Row="0" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Margin="1,2,0,0" />
      </ScrollViewer>
      <Grid Name="ContentPanel" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" ZIndex="0" KeyboardNavigation.TabNavigation="Local">
        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}">
          <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="2,2,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
        <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,0,2,2" />
      </Trigger>
      <Trigger Property="TabControl.TabStripPlacement" Value="Left">
        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
        <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
        <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
        <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,2,0,2" />
      </Trigger>
      <Trigger Property="TabControl.TabStripPlacement" Value="Right">
        <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
        <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
        <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
        <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
        <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
        <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
        <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="0,2,2,2" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
    <Setter Property="Control.Template" Value="{StaticResource TabControlTemplate}" />
    <Setter Property="Control.Background" Value="{StaticResource TabControlBackground}" />
    <Setter Property="Control.BorderBrush" Value="{StaticResource TabContolBorderBrush}" />
    <Setter Property="ItemsControl.ItemContainerStyle" Value="{StaticResource TabItemStyle}" />
  </Style>
</ResourceDictionary>